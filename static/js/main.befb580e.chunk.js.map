{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","onToggle","AddTodo","onCreate","defaultValue","useState","value","setValue","bind","event","target","clear","useInputValue","onSubmit","preventDefault","trim","App","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.befb580e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type=\"checkbox\" checked={todo.completed} style={styles.input} onChange={() => onChange(todo.id)} />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className=\"delete-button\" onClick={() => removeTodo(todo.id)}>УДАЛИТЬ</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle} />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction useInputValue(defaultValue = '') {\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    return {\r\n        bind: {\r\n            value, \r\n            onChange: event => setValue(event.target.value)\r\n        },\r\n        clear: () => setValue(''),\r\n        value: () => value\r\n    }\r\n}\r\n\r\nfunction AddTodo({ onCreate }) {\r\n    const input = useInputValue('')\r\n    \r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n\r\n        if (input.value().trim()) {\r\n            onCreate(input.value())\r\n            input.clear()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form style={{ marginBottom: '1rem'}} onSubmit={submitHandler}> \r\n            <input {...input.bind} />\r\n            <button type=\"submit\">Добавить задачу</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo","import React from 'react';\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport AddTodo from './Todo/AddTodo'\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {id: 1, completed: false, title: 'Сходить в магазин за продуктами'},\n    {id: 2, completed: true, title: 'Убрать в квартире'},\n    {id: 3, completed: false, title: 'Сделать приложение на React'},\n    {id: 4, completed: false, title: 'Сделать приложение на Redux'}\n  ])\n  \n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>Список задач</h1>\n        <AddTodo onCreate={addTodo} />\n        {todos.length ? (<TodoList todos={todos} onToggle={toggleTodo} />) : (<p>Задач пока нет!</p>)}\n        \n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}